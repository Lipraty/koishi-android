on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  release:
    strategy:
      matrix:
        build:
          - name: koishi-android
            copy: copy
          - name: koishi-android-with-chromium
            copy: copy-extra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v15

      - uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: '11'
          cache: gradle

      - name: Build
        run: |
          export COPY=${{ matrix.build.copy }}
          ./build.sh

      - uses: ilharp/sign-android-release@v1 # Or use @nightly
        name: Sign app APK
        id: sign_app
        with:
          keyAlias: koishi-android
          signingKey: ${{ secrets.JKS }}
          keyStorePassword: ${{ secrets.JKS_PASSWORD }}
          keyPassword: ${{ secrets.JKS_PASSWORD }}

      - name: Upload
        run: |
          RELEASE=$(curl \
            -H 'Accept: application/vnd.github.v3+json' \
            -H 'Authorization: token ${{ github.token }}' \
            https://api.github.com/repos/${{ github.repository }}/releases/latest)
          TAG=$(echo "$RELEASE" | jq -r '.tag_name')
          UPLOAD_URL=$(echo "$RELEASE" | jq -r '.upload_url' | cut -d '{' -f 1)
          curl -X POST \
            -H 'Accept: application/vnd.github.v3+json' \
            -H 'Content-Type: octet-stream' \
            -H 'Authorization: token ${{ github.token }}' \
            --data-binary @${{steps.sign_app.outputs.signedFile}} \
            "$UPLOAD_URL?name=${{ matrix.build.name }}-$TAG.apk"
